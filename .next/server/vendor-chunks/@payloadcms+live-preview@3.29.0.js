"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@payloadcms+live-preview@3.29.0";
exports.ids = ["vendor-chunks/@payloadcms+live-preview@3.29.0"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@payloadcms+live-preview@3.29.0/node_modules/@payloadcms/live-preview/dist/handleMessage.js":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@payloadcms+live-preview@3.29.0/node_modules/@payloadcms/live-preview/dist/handleMessage.js ***!
  \************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   handleMessage: () => (/* binding */ handleMessage)\n/* harmony export */ });\n/* harmony import */ var _isLivePreviewEvent_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./isLivePreviewEvent.js */ \"(ssr)/./node_modules/.pnpm/@payloadcms+live-preview@3.29.0/node_modules/@payloadcms/live-preview/dist/isLivePreviewEvent.js\");\n/* harmony import */ var _mergeData_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mergeData.js */ \"(ssr)/./node_modules/.pnpm/@payloadcms+live-preview@3.29.0/node_modules/@payloadcms/live-preview/dist/mergeData.js\");\n\n\nconst _payloadLivePreview = {\n    /**\n   * For performance reasons, `fieldSchemaJSON` will only be sent once on the initial message\n   * We need to cache this value so that it can be used across subsequent messages\n   * To do this, save `fieldSchemaJSON` when it arrives as a global variable\n   * Send this cached value to `mergeData`, instead of `eventData.fieldSchemaJSON` directly\n   */ fieldSchema: undefined,\n    /**\n   * Each time the data is merged, cache the result as a `previousData` variable\n   * This will ensure changes compound overtop of each other\n   */ previousData: undefined\n};\nconst handleMessage = async (args)=>{\n    const { apiRoute, depth, event, initialData, serverURL } = args;\n    if ((0,_isLivePreviewEvent_js__WEBPACK_IMPORTED_MODULE_0__.isLivePreviewEvent)(event, serverURL)) {\n        const { data, externallyUpdatedRelationship, fieldSchemaJSON, locale } = event.data;\n        if (!_payloadLivePreview?.fieldSchema && fieldSchemaJSON) {\n            _payloadLivePreview.fieldSchema = fieldSchemaJSON;\n        }\n        if (!_payloadLivePreview?.fieldSchema) {\n            // eslint-disable-next-line no-console\n            console.warn('Payload Live Preview: No `fieldSchemaJSON` was received from the parent window. Unable to merge data.');\n            return initialData;\n        }\n        const mergedData = await (0,_mergeData_js__WEBPACK_IMPORTED_MODULE_1__.mergeData)({\n            apiRoute,\n            depth,\n            externallyUpdatedRelationship,\n            fieldSchema: _payloadLivePreview.fieldSchema,\n            incomingData: data,\n            initialData: _payloadLivePreview?.previousData || initialData,\n            locale,\n            serverURL\n        });\n        _payloadLivePreview.previousData = mergedData;\n        return mergedData;\n    }\n    return initialData;\n};\n\n//# sourceMappingURL=handleMessage.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHBheWxvYWRjbXMrbGl2ZS1wcmV2aWV3QDMuMjkuMC9ub2RlX21vZHVsZXMvQHBheWxvYWRjbXMvbGl2ZS1wcmV2aWV3L2Rpc3QvaGFuZGxlTWVzc2FnZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBNkQ7QUFDbEI7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxZQUFZLGlEQUFpRDtBQUM3RCxRQUFRLDBFQUFrQjtBQUMxQixnQkFBZ0IsK0RBQStEO0FBQy9FO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUMsd0RBQVM7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGhhc2hpXFxEZXNrdG9wXFxmdXNpb25pcXgtcHJvamVjdHNcXGZ1c2lvbmlxeFxcbm9kZV9tb2R1bGVzXFwucG5wbVxcQHBheWxvYWRjbXMrbGl2ZS1wcmV2aWV3QDMuMjkuMFxcbm9kZV9tb2R1bGVzXFxAcGF5bG9hZGNtc1xcbGl2ZS1wcmV2aWV3XFxkaXN0XFxoYW5kbGVNZXNzYWdlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGlzTGl2ZVByZXZpZXdFdmVudCB9IGZyb20gJy4vaXNMaXZlUHJldmlld0V2ZW50LmpzJztcbmltcG9ydCB7IG1lcmdlRGF0YSB9IGZyb20gJy4vbWVyZ2VEYXRhLmpzJztcbmNvbnN0IF9wYXlsb2FkTGl2ZVByZXZpZXcgPSB7XG4gICAgLyoqXG4gICAqIEZvciBwZXJmb3JtYW5jZSByZWFzb25zLCBgZmllbGRTY2hlbWFKU09OYCB3aWxsIG9ubHkgYmUgc2VudCBvbmNlIG9uIHRoZSBpbml0aWFsIG1lc3NhZ2VcbiAgICogV2UgbmVlZCB0byBjYWNoZSB0aGlzIHZhbHVlIHNvIHRoYXQgaXQgY2FuIGJlIHVzZWQgYWNyb3NzIHN1YnNlcXVlbnQgbWVzc2FnZXNcbiAgICogVG8gZG8gdGhpcywgc2F2ZSBgZmllbGRTY2hlbWFKU09OYCB3aGVuIGl0IGFycml2ZXMgYXMgYSBnbG9iYWwgdmFyaWFibGVcbiAgICogU2VuZCB0aGlzIGNhY2hlZCB2YWx1ZSB0byBgbWVyZ2VEYXRhYCwgaW5zdGVhZCBvZiBgZXZlbnREYXRhLmZpZWxkU2NoZW1hSlNPTmAgZGlyZWN0bHlcbiAgICovIGZpZWxkU2NoZW1hOiB1bmRlZmluZWQsXG4gICAgLyoqXG4gICAqIEVhY2ggdGltZSB0aGUgZGF0YSBpcyBtZXJnZWQsIGNhY2hlIHRoZSByZXN1bHQgYXMgYSBgcHJldmlvdXNEYXRhYCB2YXJpYWJsZVxuICAgKiBUaGlzIHdpbGwgZW5zdXJlIGNoYW5nZXMgY29tcG91bmQgb3ZlcnRvcCBvZiBlYWNoIG90aGVyXG4gICAqLyBwcmV2aW91c0RhdGE6IHVuZGVmaW5lZFxufTtcbmV4cG9ydCBjb25zdCBoYW5kbGVNZXNzYWdlID0gYXN5bmMgKGFyZ3MpPT57XG4gICAgY29uc3QgeyBhcGlSb3V0ZSwgZGVwdGgsIGV2ZW50LCBpbml0aWFsRGF0YSwgc2VydmVyVVJMIH0gPSBhcmdzO1xuICAgIGlmIChpc0xpdmVQcmV2aWV3RXZlbnQoZXZlbnQsIHNlcnZlclVSTCkpIHtcbiAgICAgICAgY29uc3QgeyBkYXRhLCBleHRlcm5hbGx5VXBkYXRlZFJlbGF0aW9uc2hpcCwgZmllbGRTY2hlbWFKU09OLCBsb2NhbGUgfSA9IGV2ZW50LmRhdGE7XG4gICAgICAgIGlmICghX3BheWxvYWRMaXZlUHJldmlldz8uZmllbGRTY2hlbWEgJiYgZmllbGRTY2hlbWFKU09OKSB7XG4gICAgICAgICAgICBfcGF5bG9hZExpdmVQcmV2aWV3LmZpZWxkU2NoZW1hID0gZmllbGRTY2hlbWFKU09OO1xuICAgICAgICB9XG4gICAgICAgIGlmICghX3BheWxvYWRMaXZlUHJldmlldz8uZmllbGRTY2hlbWEpIHtcbiAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlXG4gICAgICAgICAgICBjb25zb2xlLndhcm4oJ1BheWxvYWQgTGl2ZSBQcmV2aWV3OiBObyBgZmllbGRTY2hlbWFKU09OYCB3YXMgcmVjZWl2ZWQgZnJvbSB0aGUgcGFyZW50IHdpbmRvdy4gVW5hYmxlIHRvIG1lcmdlIGRhdGEuJyk7XG4gICAgICAgICAgICByZXR1cm4gaW5pdGlhbERhdGE7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgbWVyZ2VkRGF0YSA9IGF3YWl0IG1lcmdlRGF0YSh7XG4gICAgICAgICAgICBhcGlSb3V0ZSxcbiAgICAgICAgICAgIGRlcHRoLFxuICAgICAgICAgICAgZXh0ZXJuYWxseVVwZGF0ZWRSZWxhdGlvbnNoaXAsXG4gICAgICAgICAgICBmaWVsZFNjaGVtYTogX3BheWxvYWRMaXZlUHJldmlldy5maWVsZFNjaGVtYSxcbiAgICAgICAgICAgIGluY29taW5nRGF0YTogZGF0YSxcbiAgICAgICAgICAgIGluaXRpYWxEYXRhOiBfcGF5bG9hZExpdmVQcmV2aWV3Py5wcmV2aW91c0RhdGEgfHwgaW5pdGlhbERhdGEsXG4gICAgICAgICAgICBsb2NhbGUsXG4gICAgICAgICAgICBzZXJ2ZXJVUkxcbiAgICAgICAgfSk7XG4gICAgICAgIF9wYXlsb2FkTGl2ZVByZXZpZXcucHJldmlvdXNEYXRhID0gbWVyZ2VkRGF0YTtcbiAgICAgICAgcmV0dXJuIG1lcmdlZERhdGE7XG4gICAgfVxuICAgIHJldHVybiBpbml0aWFsRGF0YTtcbn07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWhhbmRsZU1lc3NhZ2UuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@payloadcms+live-preview@3.29.0/node_modules/@payloadcms/live-preview/dist/handleMessage.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@payloadcms+live-preview@3.29.0/node_modules/@payloadcms/live-preview/dist/index.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@payloadcms+live-preview@3.29.0/node_modules/@payloadcms/live-preview/dist/index.js ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   handleMessage: () => (/* reexport safe */ _handleMessage_js__WEBPACK_IMPORTED_MODULE_0__.handleMessage),\n/* harmony export */   isDocumentEvent: () => (/* reexport safe */ _isDocumentEvent_js__WEBPACK_IMPORTED_MODULE_1__.isDocumentEvent),\n/* harmony export */   isLivePreviewEvent: () => (/* reexport safe */ _isLivePreviewEvent_js__WEBPACK_IMPORTED_MODULE_2__.isLivePreviewEvent),\n/* harmony export */   mergeData: () => (/* reexport safe */ _mergeData_js__WEBPACK_IMPORTED_MODULE_3__.mergeData),\n/* harmony export */   ready: () => (/* reexport safe */ _ready_js__WEBPACK_IMPORTED_MODULE_4__.ready),\n/* harmony export */   subscribe: () => (/* reexport safe */ _subscribe_js__WEBPACK_IMPORTED_MODULE_5__.subscribe),\n/* harmony export */   traverseRichText: () => (/* reexport safe */ _traverseRichText_js__WEBPACK_IMPORTED_MODULE_6__.traverseRichText),\n/* harmony export */   unsubscribe: () => (/* reexport safe */ _unsubscribe_js__WEBPACK_IMPORTED_MODULE_7__.unsubscribe)\n/* harmony export */ });\n/* harmony import */ var _handleMessage_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./handleMessage.js */ \"(ssr)/./node_modules/.pnpm/@payloadcms+live-preview@3.29.0/node_modules/@payloadcms/live-preview/dist/handleMessage.js\");\n/* harmony import */ var _isDocumentEvent_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./isDocumentEvent.js */ \"(ssr)/./node_modules/.pnpm/@payloadcms+live-preview@3.29.0/node_modules/@payloadcms/live-preview/dist/isDocumentEvent.js\");\n/* harmony import */ var _isLivePreviewEvent_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./isLivePreviewEvent.js */ \"(ssr)/./node_modules/.pnpm/@payloadcms+live-preview@3.29.0/node_modules/@payloadcms/live-preview/dist/isLivePreviewEvent.js\");\n/* harmony import */ var _mergeData_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./mergeData.js */ \"(ssr)/./node_modules/.pnpm/@payloadcms+live-preview@3.29.0/node_modules/@payloadcms/live-preview/dist/mergeData.js\");\n/* harmony import */ var _ready_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ready.js */ \"(ssr)/./node_modules/.pnpm/@payloadcms+live-preview@3.29.0/node_modules/@payloadcms/live-preview/dist/ready.js\");\n/* harmony import */ var _subscribe_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./subscribe.js */ \"(ssr)/./node_modules/.pnpm/@payloadcms+live-preview@3.29.0/node_modules/@payloadcms/live-preview/dist/subscribe.js\");\n/* harmony import */ var _traverseRichText_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./traverseRichText.js */ \"(ssr)/./node_modules/.pnpm/@payloadcms+live-preview@3.29.0/node_modules/@payloadcms/live-preview/dist/traverseRichText.js\");\n/* harmony import */ var _unsubscribe_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./unsubscribe.js */ \"(ssr)/./node_modules/.pnpm/@payloadcms+live-preview@3.29.0/node_modules/@payloadcms/live-preview/dist/unsubscribe.js\");\n\n\n\n\n\n\n\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHBheWxvYWRjbXMrbGl2ZS1wcmV2aWV3QDMuMjkuMC9ub2RlX21vZHVsZXMvQHBheWxvYWRjbXMvbGl2ZS1wcmV2aWV3L2Rpc3QvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFtRDtBQUNJO0FBQ007QUFDbEI7QUFDUjtBQUNRO0FBQ2M7QUFDVjs7QUFFL0MiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcaGFzaGlcXERlc2t0b3BcXGZ1c2lvbmlxeC1wcm9qZWN0c1xcZnVzaW9uaXF4XFxub2RlX21vZHVsZXNcXC5wbnBtXFxAcGF5bG9hZGNtcytsaXZlLXByZXZpZXdAMy4yOS4wXFxub2RlX21vZHVsZXNcXEBwYXlsb2FkY21zXFxsaXZlLXByZXZpZXdcXGRpc3RcXGluZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7IGhhbmRsZU1lc3NhZ2UgfSBmcm9tICcuL2hhbmRsZU1lc3NhZ2UuanMnO1xuZXhwb3J0IHsgaXNEb2N1bWVudEV2ZW50IH0gZnJvbSAnLi9pc0RvY3VtZW50RXZlbnQuanMnO1xuZXhwb3J0IHsgaXNMaXZlUHJldmlld0V2ZW50IH0gZnJvbSAnLi9pc0xpdmVQcmV2aWV3RXZlbnQuanMnO1xuZXhwb3J0IHsgbWVyZ2VEYXRhIH0gZnJvbSAnLi9tZXJnZURhdGEuanMnO1xuZXhwb3J0IHsgcmVhZHkgfSBmcm9tICcuL3JlYWR5LmpzJztcbmV4cG9ydCB7IHN1YnNjcmliZSB9IGZyb20gJy4vc3Vic2NyaWJlLmpzJztcbmV4cG9ydCB7IHRyYXZlcnNlUmljaFRleHQgfSBmcm9tICcuL3RyYXZlcnNlUmljaFRleHQuanMnO1xuZXhwb3J0IHsgdW5zdWJzY3JpYmUgfSBmcm9tICcuL3Vuc3Vic2NyaWJlLmpzJztcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@payloadcms+live-preview@3.29.0/node_modules/@payloadcms/live-preview/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@payloadcms+live-preview@3.29.0/node_modules/@payloadcms/live-preview/dist/isDocumentEvent.js":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@payloadcms+live-preview@3.29.0/node_modules/@payloadcms/live-preview/dist/isDocumentEvent.js ***!
  \**************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isDocumentEvent: () => (/* binding */ isDocumentEvent)\n/* harmony export */ });\nconst isDocumentEvent = (event, serverURL)=>event.origin === serverURL && event.data && typeof event.data === 'object' && event.data.type === 'payload-document-event';\n\n//# sourceMappingURL=isDocumentEvent.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHBheWxvYWRjbXMrbGl2ZS1wcmV2aWV3QDMuMjkuMC9ub2RlX21vZHVsZXMvQHBheWxvYWRjbXMvbGl2ZS1wcmV2aWV3L2Rpc3QvaXNEb2N1bWVudEV2ZW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTzs7QUFFUCIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxoYXNoaVxcRGVza3RvcFxcZnVzaW9uaXF4LXByb2plY3RzXFxmdXNpb25pcXhcXG5vZGVfbW9kdWxlc1xcLnBucG1cXEBwYXlsb2FkY21zK2xpdmUtcHJldmlld0AzLjI5LjBcXG5vZGVfbW9kdWxlc1xcQHBheWxvYWRjbXNcXGxpdmUtcHJldmlld1xcZGlzdFxcaXNEb2N1bWVudEV2ZW50LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBpc0RvY3VtZW50RXZlbnQgPSAoZXZlbnQsIHNlcnZlclVSTCk9PmV2ZW50Lm9yaWdpbiA9PT0gc2VydmVyVVJMICYmIGV2ZW50LmRhdGEgJiYgdHlwZW9mIGV2ZW50LmRhdGEgPT09ICdvYmplY3QnICYmIGV2ZW50LmRhdGEudHlwZSA9PT0gJ3BheWxvYWQtZG9jdW1lbnQtZXZlbnQnO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1pc0RvY3VtZW50RXZlbnQuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@payloadcms+live-preview@3.29.0/node_modules/@payloadcms/live-preview/dist/isDocumentEvent.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@payloadcms+live-preview@3.29.0/node_modules/@payloadcms/live-preview/dist/isLivePreviewEvent.js":
/*!*****************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@payloadcms+live-preview@3.29.0/node_modules/@payloadcms/live-preview/dist/isLivePreviewEvent.js ***!
  \*****************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isLivePreviewEvent: () => (/* binding */ isLivePreviewEvent)\n/* harmony export */ });\nconst isLivePreviewEvent = (event, serverURL)=>event.origin === serverURL && event.data && typeof event.data === 'object' && event.data.type === 'payload-live-preview';\n\n//# sourceMappingURL=isLivePreviewEvent.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHBheWxvYWRjbXMrbGl2ZS1wcmV2aWV3QDMuMjkuMC9ub2RlX21vZHVsZXMvQHBheWxvYWRjbXMvbGl2ZS1wcmV2aWV3L2Rpc3QvaXNMaXZlUHJldmlld0V2ZW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTzs7QUFFUCIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxoYXNoaVxcRGVza3RvcFxcZnVzaW9uaXF4LXByb2plY3RzXFxmdXNpb25pcXhcXG5vZGVfbW9kdWxlc1xcLnBucG1cXEBwYXlsb2FkY21zK2xpdmUtcHJldmlld0AzLjI5LjBcXG5vZGVfbW9kdWxlc1xcQHBheWxvYWRjbXNcXGxpdmUtcHJldmlld1xcZGlzdFxcaXNMaXZlUHJldmlld0V2ZW50LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBpc0xpdmVQcmV2aWV3RXZlbnQgPSAoZXZlbnQsIHNlcnZlclVSTCk9PmV2ZW50Lm9yaWdpbiA9PT0gc2VydmVyVVJMICYmIGV2ZW50LmRhdGEgJiYgdHlwZW9mIGV2ZW50LmRhdGEgPT09ICdvYmplY3QnICYmIGV2ZW50LmRhdGEudHlwZSA9PT0gJ3BheWxvYWQtbGl2ZS1wcmV2aWV3JztcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aXNMaXZlUHJldmlld0V2ZW50LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@payloadcms+live-preview@3.29.0/node_modules/@payloadcms/live-preview/dist/isLivePreviewEvent.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@payloadcms+live-preview@3.29.0/node_modules/@payloadcms/live-preview/dist/mergeData.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@payloadcms+live-preview@3.29.0/node_modules/@payloadcms/live-preview/dist/mergeData.js ***!
  \********************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mergeData: () => (/* binding */ mergeData)\n/* harmony export */ });\n/* harmony import */ var _traverseFields_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./traverseFields.js */ \"(ssr)/./node_modules/.pnpm/@payloadcms+live-preview@3.29.0/node_modules/@payloadcms/live-preview/dist/traverseFields.js\");\n\nconst defaultRequestHandler = ({ apiPath, endpoint, serverURL })=>{\n    const url = `${serverURL}${apiPath}/${endpoint}`;\n    return fetch(url, {\n        credentials: 'include',\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    });\n};\n// Relationships are only updated when their `id` or `relationTo` changes, by comparing the old and new values\n// This needs to also happen when locale changes, except this is not not part of the API response\n// Instead, we keep track of the old locale ourselves and trigger a re-population when it changes\nlet prevLocale;\nconst mergeData = async (args)=>{\n    const { apiRoute, depth, externallyUpdatedRelationship, fieldSchema, incomingData, initialData, locale, returnNumberOfRequests, serverURL } = args;\n    const result = {\n        ...initialData\n    };\n    const populationsByCollection = {};\n    (0,_traverseFields_js__WEBPACK_IMPORTED_MODULE_0__.traverseFields)({\n        externallyUpdatedRelationship,\n        fieldSchema,\n        incomingData,\n        localeChanged: prevLocale !== locale,\n        populationsByCollection,\n        result\n    });\n    await Promise.all(Object.entries(populationsByCollection).map(async ([collection, populations])=>{\n        let res;\n        const ids = new Set(populations.map(({ id })=>id));\n        const requestHandler = args.collectionPopulationRequestHandler || defaultRequestHandler;\n        try {\n            res = await requestHandler({\n                apiPath: apiRoute || '/api',\n                endpoint: encodeURI(`${collection}?depth=${depth}&where[id][in]=${Array.from(ids).join(',')}${locale ? `&locale=${locale}` : ''}`),\n                serverURL\n            }).then((res)=>res.json());\n            if (res?.docs?.length > 0) {\n                res.docs.forEach((doc)=>{\n                    populationsByCollection[collection].forEach((population)=>{\n                        if (population.id === doc.id) {\n                            population.ref[population.accessor] = doc;\n                        }\n                    });\n                });\n            }\n        } catch (err) {\n            console.error(err) // eslint-disable-line no-console\n            ;\n        }\n    }));\n    prevLocale = locale;\n    return {\n        ...result,\n        ...returnNumberOfRequests ? {\n            _numberOfRequests: Object.keys(populationsByCollection).length\n        } : {}\n    };\n};\n\n//# sourceMappingURL=mergeData.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHBheWxvYWRjbXMrbGl2ZS1wcmV2aWV3QDMuMjkuMC9ub2RlX21vZHVsZXMvQHBheWxvYWRjbXMvbGl2ZS1wcmV2aWV3L2Rpc3QvbWVyZ2VEYXRhLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXFEO0FBQ3JELGlDQUFpQyw4QkFBOEI7QUFDL0QsbUJBQW1CLFVBQVUsRUFBRSxRQUFRLEdBQUcsU0FBUztBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLFlBQVksb0lBQW9JO0FBQ2hKO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSSxrRUFBYztBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLCtDQUErQyxJQUFJO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUNBQXVDLFdBQVcsU0FBUyxNQUFNLGlCQUFpQiwwQkFBMEIsRUFBRSxvQkFBb0IsT0FBTyxPQUFPO0FBQ2hKO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQixpQkFBaUI7QUFDakI7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxoYXNoaVxcRGVza3RvcFxcZnVzaW9uaXF4LXByb2plY3RzXFxmdXNpb25pcXhcXG5vZGVfbW9kdWxlc1xcLnBucG1cXEBwYXlsb2FkY21zK2xpdmUtcHJldmlld0AzLjI5LjBcXG5vZGVfbW9kdWxlc1xcQHBheWxvYWRjbXNcXGxpdmUtcHJldmlld1xcZGlzdFxcbWVyZ2VEYXRhLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHRyYXZlcnNlRmllbGRzIH0gZnJvbSAnLi90cmF2ZXJzZUZpZWxkcy5qcyc7XG5jb25zdCBkZWZhdWx0UmVxdWVzdEhhbmRsZXIgPSAoeyBhcGlQYXRoLCBlbmRwb2ludCwgc2VydmVyVVJMIH0pPT57XG4gICAgY29uc3QgdXJsID0gYCR7c2VydmVyVVJMfSR7YXBpUGF0aH0vJHtlbmRwb2ludH1gO1xuICAgIHJldHVybiBmZXRjaCh1cmwsIHtcbiAgICAgICAgY3JlZGVudGlhbHM6ICdpbmNsdWRlJyxcbiAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJ1xuICAgICAgICB9XG4gICAgfSk7XG59O1xuLy8gUmVsYXRpb25zaGlwcyBhcmUgb25seSB1cGRhdGVkIHdoZW4gdGhlaXIgYGlkYCBvciBgcmVsYXRpb25Ub2AgY2hhbmdlcywgYnkgY29tcGFyaW5nIHRoZSBvbGQgYW5kIG5ldyB2YWx1ZXNcbi8vIFRoaXMgbmVlZHMgdG8gYWxzbyBoYXBwZW4gd2hlbiBsb2NhbGUgY2hhbmdlcywgZXhjZXB0IHRoaXMgaXMgbm90IG5vdCBwYXJ0IG9mIHRoZSBBUEkgcmVzcG9uc2Vcbi8vIEluc3RlYWQsIHdlIGtlZXAgdHJhY2sgb2YgdGhlIG9sZCBsb2NhbGUgb3Vyc2VsdmVzIGFuZCB0cmlnZ2VyIGEgcmUtcG9wdWxhdGlvbiB3aGVuIGl0IGNoYW5nZXNcbmxldCBwcmV2TG9jYWxlO1xuZXhwb3J0IGNvbnN0IG1lcmdlRGF0YSA9IGFzeW5jIChhcmdzKT0+e1xuICAgIGNvbnN0IHsgYXBpUm91dGUsIGRlcHRoLCBleHRlcm5hbGx5VXBkYXRlZFJlbGF0aW9uc2hpcCwgZmllbGRTY2hlbWEsIGluY29taW5nRGF0YSwgaW5pdGlhbERhdGEsIGxvY2FsZSwgcmV0dXJuTnVtYmVyT2ZSZXF1ZXN0cywgc2VydmVyVVJMIH0gPSBhcmdzO1xuICAgIGNvbnN0IHJlc3VsdCA9IHtcbiAgICAgICAgLi4uaW5pdGlhbERhdGFcbiAgICB9O1xuICAgIGNvbnN0IHBvcHVsYXRpb25zQnlDb2xsZWN0aW9uID0ge307XG4gICAgdHJhdmVyc2VGaWVsZHMoe1xuICAgICAgICBleHRlcm5hbGx5VXBkYXRlZFJlbGF0aW9uc2hpcCxcbiAgICAgICAgZmllbGRTY2hlbWEsXG4gICAgICAgIGluY29taW5nRGF0YSxcbiAgICAgICAgbG9jYWxlQ2hhbmdlZDogcHJldkxvY2FsZSAhPT0gbG9jYWxlLFxuICAgICAgICBwb3B1bGF0aW9uc0J5Q29sbGVjdGlvbixcbiAgICAgICAgcmVzdWx0XG4gICAgfSk7XG4gICAgYXdhaXQgUHJvbWlzZS5hbGwoT2JqZWN0LmVudHJpZXMocG9wdWxhdGlvbnNCeUNvbGxlY3Rpb24pLm1hcChhc3luYyAoW2NvbGxlY3Rpb24sIHBvcHVsYXRpb25zXSk9PntcbiAgICAgICAgbGV0IHJlcztcbiAgICAgICAgY29uc3QgaWRzID0gbmV3IFNldChwb3B1bGF0aW9ucy5tYXAoKHsgaWQgfSk9PmlkKSk7XG4gICAgICAgIGNvbnN0IHJlcXVlc3RIYW5kbGVyID0gYXJncy5jb2xsZWN0aW9uUG9wdWxhdGlvblJlcXVlc3RIYW5kbGVyIHx8IGRlZmF1bHRSZXF1ZXN0SGFuZGxlcjtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHJlcyA9IGF3YWl0IHJlcXVlc3RIYW5kbGVyKHtcbiAgICAgICAgICAgICAgICBhcGlQYXRoOiBhcGlSb3V0ZSB8fCAnL2FwaScsXG4gICAgICAgICAgICAgICAgZW5kcG9pbnQ6IGVuY29kZVVSSShgJHtjb2xsZWN0aW9ufT9kZXB0aD0ke2RlcHRofSZ3aGVyZVtpZF1baW5dPSR7QXJyYXkuZnJvbShpZHMpLmpvaW4oJywnKX0ke2xvY2FsZSA/IGAmbG9jYWxlPSR7bG9jYWxlfWAgOiAnJ31gKSxcbiAgICAgICAgICAgICAgICBzZXJ2ZXJVUkxcbiAgICAgICAgICAgIH0pLnRoZW4oKHJlcyk9PnJlcy5qc29uKCkpO1xuICAgICAgICAgICAgaWYgKHJlcz8uZG9jcz8ubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgICAgIHJlcy5kb2NzLmZvckVhY2goKGRvYyk9PntcbiAgICAgICAgICAgICAgICAgICAgcG9wdWxhdGlvbnNCeUNvbGxlY3Rpb25bY29sbGVjdGlvbl0uZm9yRWFjaCgocG9wdWxhdGlvbik9PntcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChwb3B1bGF0aW9uLmlkID09PSBkb2MuaWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwb3B1bGF0aW9uLnJlZltwb3B1bGF0aW9uLmFjY2Vzc29yXSA9IGRvYztcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcihlcnIpIC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tY29uc29sZVxuICAgICAgICAgICAgO1xuICAgICAgICB9XG4gICAgfSkpO1xuICAgIHByZXZMb2NhbGUgPSBsb2NhbGU7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgLi4ucmVzdWx0LFxuICAgICAgICAuLi5yZXR1cm5OdW1iZXJPZlJlcXVlc3RzID8ge1xuICAgICAgICAgICAgX251bWJlck9mUmVxdWVzdHM6IE9iamVjdC5rZXlzKHBvcHVsYXRpb25zQnlDb2xsZWN0aW9uKS5sZW5ndGhcbiAgICAgICAgfSA6IHt9XG4gICAgfTtcbn07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW1lcmdlRGF0YS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@payloadcms+live-preview@3.29.0/node_modules/@payloadcms/live-preview/dist/mergeData.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@payloadcms+live-preview@3.29.0/node_modules/@payloadcms/live-preview/dist/ready.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@payloadcms+live-preview@3.29.0/node_modules/@payloadcms/live-preview/dist/ready.js ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ready: () => (/* binding */ ready)\n/* harmony export */ });\nconst ready = (args)=>{\n    const { serverURL } = args;\n    if (typeof window !== 'undefined') {\n        // This subscription may have been from either an iframe or a popup\n        // We need to report 'ready' to the parent window, whichever it may be\n        // i.e. `window?.opener` for popups, `window?.parent` for iframes\n        const windowToPostTo = window?.opener || window?.parent;\n        windowToPostTo?.postMessage({\n            type: 'payload-live-preview',\n            ready: true\n        }, serverURL);\n    }\n};\n\n//# sourceMappingURL=ready.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHBheWxvYWRjbXMrbGl2ZS1wcmV2aWV3QDMuMjkuMC9ub2RlX21vZHVsZXMvQHBheWxvYWRjbXMvbGl2ZS1wcmV2aWV3L2Rpc3QvcmVhZHkuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPO0FBQ1AsWUFBWSxZQUFZO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxoYXNoaVxcRGVza3RvcFxcZnVzaW9uaXF4LXByb2plY3RzXFxmdXNpb25pcXhcXG5vZGVfbW9kdWxlc1xcLnBucG1cXEBwYXlsb2FkY21zK2xpdmUtcHJldmlld0AzLjI5LjBcXG5vZGVfbW9kdWxlc1xcQHBheWxvYWRjbXNcXGxpdmUtcHJldmlld1xcZGlzdFxccmVhZHkuanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IHJlYWR5ID0gKGFyZ3MpPT57XG4gICAgY29uc3QgeyBzZXJ2ZXJVUkwgfSA9IGFyZ3M7XG4gICAgaWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIC8vIFRoaXMgc3Vic2NyaXB0aW9uIG1heSBoYXZlIGJlZW4gZnJvbSBlaXRoZXIgYW4gaWZyYW1lIG9yIGEgcG9wdXBcbiAgICAgICAgLy8gV2UgbmVlZCB0byByZXBvcnQgJ3JlYWR5JyB0byB0aGUgcGFyZW50IHdpbmRvdywgd2hpY2hldmVyIGl0IG1heSBiZVxuICAgICAgICAvLyBpLmUuIGB3aW5kb3c/Lm9wZW5lcmAgZm9yIHBvcHVwcywgYHdpbmRvdz8ucGFyZW50YCBmb3IgaWZyYW1lc1xuICAgICAgICBjb25zdCB3aW5kb3dUb1Bvc3RUbyA9IHdpbmRvdz8ub3BlbmVyIHx8IHdpbmRvdz8ucGFyZW50O1xuICAgICAgICB3aW5kb3dUb1Bvc3RUbz8ucG9zdE1lc3NhZ2Uoe1xuICAgICAgICAgICAgdHlwZTogJ3BheWxvYWQtbGl2ZS1wcmV2aWV3JyxcbiAgICAgICAgICAgIHJlYWR5OiB0cnVlXG4gICAgICAgIH0sIHNlcnZlclVSTCk7XG4gICAgfVxufTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVhZHkuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@payloadcms+live-preview@3.29.0/node_modules/@payloadcms/live-preview/dist/ready.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@payloadcms+live-preview@3.29.0/node_modules/@payloadcms/live-preview/dist/subscribe.js":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@payloadcms+live-preview@3.29.0/node_modules/@payloadcms/live-preview/dist/subscribe.js ***!
  \********************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   subscribe: () => (/* binding */ subscribe)\n/* harmony export */ });\n/* harmony import */ var _handleMessage_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./handleMessage.js */ \"(ssr)/./node_modules/.pnpm/@payloadcms+live-preview@3.29.0/node_modules/@payloadcms/live-preview/dist/handleMessage.js\");\n\nconst subscribe = (args)=>{\n    const { apiRoute, callback, depth, initialData, serverURL } = args;\n    const onMessage = async (event)=>{\n        const mergedData = await (0,_handleMessage_js__WEBPACK_IMPORTED_MODULE_0__.handleMessage)({\n            apiRoute,\n            depth,\n            event,\n            initialData,\n            serverURL\n        });\n        callback(mergedData);\n    };\n    if (typeof window !== 'undefined') {\n        window.addEventListener('message', onMessage);\n    }\n    return onMessage;\n};\n\n//# sourceMappingURL=subscribe.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHBheWxvYWRjbXMrbGl2ZS1wcmV2aWV3QDMuMjkuMC9ub2RlX21vZHVsZXMvQHBheWxvYWRjbXMvbGl2ZS1wcmV2aWV3L2Rpc3Qvc3Vic2NyaWJlLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQW1EO0FBQzVDO0FBQ1AsWUFBWSxvREFBb0Q7QUFDaEU7QUFDQSxpQ0FBaUMsZ0VBQWE7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxoYXNoaVxcRGVza3RvcFxcZnVzaW9uaXF4LXByb2plY3RzXFxmdXNpb25pcXhcXG5vZGVfbW9kdWxlc1xcLnBucG1cXEBwYXlsb2FkY21zK2xpdmUtcHJldmlld0AzLjI5LjBcXG5vZGVfbW9kdWxlc1xcQHBheWxvYWRjbXNcXGxpdmUtcHJldmlld1xcZGlzdFxcc3Vic2NyaWJlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGhhbmRsZU1lc3NhZ2UgfSBmcm9tICcuL2hhbmRsZU1lc3NhZ2UuanMnO1xuZXhwb3J0IGNvbnN0IHN1YnNjcmliZSA9IChhcmdzKT0+e1xuICAgIGNvbnN0IHsgYXBpUm91dGUsIGNhbGxiYWNrLCBkZXB0aCwgaW5pdGlhbERhdGEsIHNlcnZlclVSTCB9ID0gYXJncztcbiAgICBjb25zdCBvbk1lc3NhZ2UgPSBhc3luYyAoZXZlbnQpPT57XG4gICAgICAgIGNvbnN0IG1lcmdlZERhdGEgPSBhd2FpdCBoYW5kbGVNZXNzYWdlKHtcbiAgICAgICAgICAgIGFwaVJvdXRlLFxuICAgICAgICAgICAgZGVwdGgsXG4gICAgICAgICAgICBldmVudCxcbiAgICAgICAgICAgIGluaXRpYWxEYXRhLFxuICAgICAgICAgICAgc2VydmVyVVJMXG4gICAgICAgIH0pO1xuICAgICAgICBjYWxsYmFjayhtZXJnZWREYXRhKTtcbiAgICB9O1xuICAgIGlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignbWVzc2FnZScsIG9uTWVzc2FnZSk7XG4gICAgfVxuICAgIHJldHVybiBvbk1lc3NhZ2U7XG59O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1zdWJzY3JpYmUuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@payloadcms+live-preview@3.29.0/node_modules/@payloadcms/live-preview/dist/subscribe.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@payloadcms+live-preview@3.29.0/node_modules/@payloadcms/live-preview/dist/traverseFields.js":
/*!*************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@payloadcms+live-preview@3.29.0/node_modules/@payloadcms/live-preview/dist/traverseFields.js ***!
  \*************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   traverseFields: () => (/* binding */ traverseFields)\n/* harmony export */ });\n/* harmony import */ var _traverseRichText_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./traverseRichText.js */ \"(ssr)/./node_modules/.pnpm/@payloadcms+live-preview@3.29.0/node_modules/@payloadcms/live-preview/dist/traverseRichText.js\");\n\nconst traverseFields = (args)=>{\n    const { externallyUpdatedRelationship, fieldSchema: fieldSchemas, incomingData, localeChanged, populationsByCollection, result } = args;\n    fieldSchemas.forEach((fieldSchema)=>{\n        if ('name' in fieldSchema && typeof fieldSchema.name === 'string') {\n            const fieldName = fieldSchema.name;\n            switch(fieldSchema.type){\n                case 'array':\n                    if (!incomingData[fieldName] && incomingData[fieldName] !== undefined && result?.[fieldName] !== undefined) {\n                        result[fieldName] = [];\n                    }\n                    if (Array.isArray(incomingData[fieldName])) {\n                        result[fieldName] = incomingData[fieldName].map((incomingRow, i)=>{\n                            if (!result[fieldName]) {\n                                result[fieldName] = [];\n                            }\n                            if (!result[fieldName][i]) {\n                                result[fieldName][i] = {};\n                            }\n                            traverseFields({\n                                externallyUpdatedRelationship,\n                                fieldSchema: fieldSchema.fields,\n                                incomingData: incomingRow,\n                                localeChanged,\n                                populationsByCollection,\n                                result: result[fieldName][i]\n                            });\n                            return result[fieldName][i];\n                        });\n                    }\n                    break;\n                case 'blocks':\n                    if (Array.isArray(incomingData[fieldName])) {\n                        result[fieldName] = incomingData[fieldName].map((incomingBlock, i)=>{\n                            const incomingBlockJSON = fieldSchema.blocks[incomingBlock.blockType];\n                            if (!result[fieldName]) {\n                                result[fieldName] = [];\n                            }\n                            if (!result[fieldName][i] || result[fieldName][i].id !== incomingBlock.id || result[fieldName][i].blockType !== incomingBlock.blockType) {\n                                result[fieldName][i] = {\n                                    blockType: incomingBlock.blockType\n                                };\n                            }\n                            traverseFields({\n                                externallyUpdatedRelationship,\n                                fieldSchema: incomingBlockJSON.fields,\n                                incomingData: incomingBlock,\n                                localeChanged,\n                                populationsByCollection,\n                                result: result[fieldName][i]\n                            });\n                            return result[fieldName][i];\n                        });\n                    } else {\n                        result[fieldName] = [];\n                    }\n                    break;\n                case 'group':\n                // falls through\n                case 'tabs':\n                    if (!result[fieldName]) {\n                        result[fieldName] = {};\n                    }\n                    traverseFields({\n                        externallyUpdatedRelationship,\n                        fieldSchema: fieldSchema.fields,\n                        incomingData: incomingData[fieldName] || {},\n                        localeChanged,\n                        populationsByCollection,\n                        result: result[fieldName]\n                    });\n                    break;\n                case 'relationship':\n                // falls through\n                case 'upload':\n                    // Handle `hasMany` relationships\n                    if (fieldSchema.hasMany && Array.isArray(incomingData[fieldName])) {\n                        if (!result[fieldName] || !incomingData[fieldName].length) {\n                            result[fieldName] = [];\n                        }\n                        incomingData[fieldName].forEach((incomingRelation, i)=>{\n                            // Handle `hasMany` polymorphic\n                            if (Array.isArray(fieldSchema.relationTo)) {\n                                // if the field doesn't exist on the result, create it\n                                // the value will be populated later\n                                if (!result[fieldName][i]) {\n                                    result[fieldName][i] = {\n                                        relationTo: incomingRelation.relationTo\n                                    };\n                                }\n                                const oldID = result[fieldName][i]?.value?.id;\n                                const oldRelation = result[fieldName][i]?.relationTo;\n                                const newID = incomingRelation.value;\n                                const newRelation = incomingRelation.relationTo;\n                                const hasChanged = newID !== oldID || newRelation !== oldRelation;\n                                const hasUpdated = newRelation === externallyUpdatedRelationship?.entitySlug && newID === externallyUpdatedRelationship?.id;\n                                if (hasChanged || hasUpdated || localeChanged) {\n                                    if (!populationsByCollection[newRelation]) {\n                                        populationsByCollection[newRelation] = [];\n                                    }\n                                    populationsByCollection[newRelation].push({\n                                        id: incomingRelation.value,\n                                        accessor: 'value',\n                                        ref: result[fieldName][i]\n                                    });\n                                }\n                            } else {\n                                // Handle `hasMany` monomorphic\n                                const hasChanged = incomingRelation !== result[fieldName][i]?.id;\n                                const hasUpdated = fieldSchema.relationTo === externallyUpdatedRelationship?.entitySlug && incomingRelation === externallyUpdatedRelationship?.id;\n                                if (hasChanged || hasUpdated || localeChanged) {\n                                    if (!populationsByCollection[fieldSchema.relationTo]) {\n                                        populationsByCollection[fieldSchema.relationTo] = [];\n                                    }\n                                    populationsByCollection[fieldSchema.relationTo].push({\n                                        id: incomingRelation,\n                                        accessor: i,\n                                        ref: result[fieldName]\n                                    });\n                                }\n                            }\n                        });\n                    } else {\n                        // Handle `hasOne` polymorphic\n                        if (Array.isArray(fieldSchema.relationTo)) {\n                            // if the field doesn't exist on the result, create it\n                            // the value will be populated later\n                            if (!result[fieldName]) {\n                                result[fieldName] = {\n                                    relationTo: incomingData[fieldName]?.relationTo\n                                };\n                            }\n                            const hasNewValue = incomingData[fieldName] && typeof incomingData[fieldName] === 'object' && incomingData[fieldName] !== null;\n                            const hasOldValue = result[fieldName] && typeof result[fieldName] === 'object' && result[fieldName] !== null;\n                            const newID = hasNewValue ? typeof incomingData[fieldName].value === 'object' ? incomingData[fieldName].value.id : incomingData[fieldName].value : '';\n                            const oldID = hasOldValue ? typeof result[fieldName].value === 'object' ? result[fieldName].value.id : result[fieldName].value : '';\n                            const newRelation = hasNewValue ? incomingData[fieldName].relationTo : '';\n                            const oldRelation = hasOldValue ? result[fieldName].relationTo : '';\n                            const hasChanged = newID !== oldID || newRelation !== oldRelation;\n                            const hasUpdated = newRelation === externallyUpdatedRelationship?.entitySlug && newID === externallyUpdatedRelationship?.id;\n                            // if the new value/relation is different from the old value/relation\n                            // populate the new value, otherwise leave it alone\n                            if (hasChanged || hasUpdated || localeChanged) {\n                                // if the new value is not empty, populate it\n                                // otherwise set the value to null\n                                if (newID) {\n                                    if (!populationsByCollection[newRelation]) {\n                                        populationsByCollection[newRelation] = [];\n                                    }\n                                    populationsByCollection[newRelation].push({\n                                        id: newID,\n                                        accessor: 'value',\n                                        ref: result[fieldName]\n                                    });\n                                } else {\n                                    result[fieldName] = null;\n                                }\n                            }\n                        } else {\n                            // Handle `hasOne` monomorphic\n                            const newID = incomingData[fieldName] && typeof incomingData[fieldName] === 'object' && incomingData[fieldName].id || incomingData[fieldName];\n                            const oldID = result[fieldName] && typeof result[fieldName] === 'object' && result[fieldName].id || result[fieldName];\n                            const hasChanged = newID !== oldID;\n                            const hasUpdated = fieldSchema.relationTo === externallyUpdatedRelationship?.entitySlug && newID === externallyUpdatedRelationship?.id;\n                            // if the new value is different from the old value\n                            // populate the new value, otherwise leave it alone\n                            if (hasChanged || hasUpdated || localeChanged) {\n                                // if the new value is not empty, populate it\n                                // otherwise set the value to null\n                                if (newID) {\n                                    if (!populationsByCollection[fieldSchema.relationTo]) {\n                                        populationsByCollection[fieldSchema.relationTo] = [];\n                                    }\n                                    populationsByCollection[fieldSchema.relationTo].push({\n                                        id: newID,\n                                        accessor: fieldName,\n                                        ref: result\n                                    });\n                                } else {\n                                    result[fieldName] = null;\n                                }\n                            }\n                        }\n                    }\n                    break;\n                case 'richText':\n                    result[fieldName] = (0,_traverseRichText_js__WEBPACK_IMPORTED_MODULE_0__.traverseRichText)({\n                        externallyUpdatedRelationship,\n                        incomingData: incomingData[fieldName],\n                        populationsByCollection,\n                        result: result[fieldName]\n                    });\n                    break;\n                default:\n                    result[fieldName] = incomingData[fieldName];\n            }\n        }\n    });\n};\n\n//# sourceMappingURL=traverseFields.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@payloadcms+live-preview@3.29.0/node_modules/@payloadcms/live-preview/dist/traverseFields.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@payloadcms+live-preview@3.29.0/node_modules/@payloadcms/live-preview/dist/traverseRichText.js":
/*!***************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@payloadcms+live-preview@3.29.0/node_modules/@payloadcms/live-preview/dist/traverseRichText.js ***!
  \***************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   traverseRichText: () => (/* binding */ traverseRichText)\n/* harmony export */ });\nconst traverseRichText = ({ externallyUpdatedRelationship, incomingData, populationsByCollection, result })=>{\n    if (Array.isArray(incomingData)) {\n        if (!result) {\n            result = [];\n        }\n        result = incomingData.map((item, index)=>{\n            if (!result[index]) {\n                result[index] = item;\n            }\n            return traverseRichText({\n                externallyUpdatedRelationship,\n                incomingData: item,\n                populationsByCollection,\n                result: result[index]\n            });\n        });\n    } else if (incomingData && typeof incomingData === 'object') {\n        if (!result) {\n            result = {};\n        }\n        // Remove keys from `result` that do not appear in `incomingData`\n        // There's likely another way to do this,\n        // But recursion and references make this very difficult\n        Object.keys(result).forEach((key)=>{\n            if (!(key in incomingData)) {\n                delete result[key];\n            }\n        });\n        // Iterate over the keys of `incomingData` and populate `result`\n        Object.keys(incomingData).forEach((key)=>{\n            if (!result[key]) {\n                // Instantiate the key in `result` if it doesn't exist\n                // Ensure its type matches the type of the `incomingData`\n                // We don't have a schema to check against here\n                result[key] = incomingData[key] && typeof incomingData[key] === 'object' ? Array.isArray(incomingData[key]) ? [] : {} : undefined;\n            }\n            const isRelationship = key === 'value' && 'relationTo' in incomingData;\n            if (isRelationship) {\n                // or if there are no keys besides id\n                const needsPopulation = !result.value || typeof result.value !== 'object' || typeof result.value === 'object' && Object.keys(result.value).length === 1 && 'id' in result.value;\n                const hasChanged = result && typeof result === 'object' && result.value.id === externallyUpdatedRelationship?.id;\n                if (needsPopulation || hasChanged) {\n                    if (!populationsByCollection[incomingData.relationTo]) {\n                        populationsByCollection[incomingData.relationTo] = [];\n                    }\n                    populationsByCollection[incomingData.relationTo].push({\n                        id: incomingData[key] && typeof incomingData[key] === 'object' ? incomingData[key].id : incomingData[key],\n                        accessor: 'value',\n                        ref: result\n                    });\n                }\n            } else {\n                result[key] = traverseRichText({\n                    externallyUpdatedRelationship,\n                    incomingData: incomingData[key],\n                    populationsByCollection,\n                    result: result[key]\n                });\n            }\n        });\n    } else {\n        result = incomingData;\n    }\n    return result;\n};\n\n//# sourceMappingURL=traverseRichText.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHBheWxvYWRjbXMrbGl2ZS1wcmV2aWV3QDMuMjkuMC9ub2RlX21vZHVsZXMvQHBheWxvYWRjbXMvbGl2ZS1wcmV2aWV3L2Rpc3QvdHJhdmVyc2VSaWNoVGV4dC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU8sNEJBQTRCLDhFQUE4RTtBQUNqSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1QsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNJQUFzSTtBQUN0STtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0EsY0FBYztBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQSxTQUFTO0FBQ1QsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGhhc2hpXFxEZXNrdG9wXFxmdXNpb25pcXgtcHJvamVjdHNcXGZ1c2lvbmlxeFxcbm9kZV9tb2R1bGVzXFwucG5wbVxcQHBheWxvYWRjbXMrbGl2ZS1wcmV2aWV3QDMuMjkuMFxcbm9kZV9tb2R1bGVzXFxAcGF5bG9hZGNtc1xcbGl2ZS1wcmV2aWV3XFxkaXN0XFx0cmF2ZXJzZVJpY2hUZXh0LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCB0cmF2ZXJzZVJpY2hUZXh0ID0gKHsgZXh0ZXJuYWxseVVwZGF0ZWRSZWxhdGlvbnNoaXAsIGluY29taW5nRGF0YSwgcG9wdWxhdGlvbnNCeUNvbGxlY3Rpb24sIHJlc3VsdCB9KT0+e1xuICAgIGlmIChBcnJheS5pc0FycmF5KGluY29taW5nRGF0YSkpIHtcbiAgICAgICAgaWYgKCFyZXN1bHQpIHtcbiAgICAgICAgICAgIHJlc3VsdCA9IFtdO1xuICAgICAgICB9XG4gICAgICAgIHJlc3VsdCA9IGluY29taW5nRGF0YS5tYXAoKGl0ZW0sIGluZGV4KT0+e1xuICAgICAgICAgICAgaWYgKCFyZXN1bHRbaW5kZXhdKSB7XG4gICAgICAgICAgICAgICAgcmVzdWx0W2luZGV4XSA9IGl0ZW07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gdHJhdmVyc2VSaWNoVGV4dCh7XG4gICAgICAgICAgICAgICAgZXh0ZXJuYWxseVVwZGF0ZWRSZWxhdGlvbnNoaXAsXG4gICAgICAgICAgICAgICAgaW5jb21pbmdEYXRhOiBpdGVtLFxuICAgICAgICAgICAgICAgIHBvcHVsYXRpb25zQnlDb2xsZWN0aW9uLFxuICAgICAgICAgICAgICAgIHJlc3VsdDogcmVzdWx0W2luZGV4XVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH0gZWxzZSBpZiAoaW5jb21pbmdEYXRhICYmIHR5cGVvZiBpbmNvbWluZ0RhdGEgPT09ICdvYmplY3QnKSB7XG4gICAgICAgIGlmICghcmVzdWx0KSB7XG4gICAgICAgICAgICByZXN1bHQgPSB7fTtcbiAgICAgICAgfVxuICAgICAgICAvLyBSZW1vdmUga2V5cyBmcm9tIGByZXN1bHRgIHRoYXQgZG8gbm90IGFwcGVhciBpbiBgaW5jb21pbmdEYXRhYFxuICAgICAgICAvLyBUaGVyZSdzIGxpa2VseSBhbm90aGVyIHdheSB0byBkbyB0aGlzLFxuICAgICAgICAvLyBCdXQgcmVjdXJzaW9uIGFuZCByZWZlcmVuY2VzIG1ha2UgdGhpcyB2ZXJ5IGRpZmZpY3VsdFxuICAgICAgICBPYmplY3Qua2V5cyhyZXN1bHQpLmZvckVhY2goKGtleSk9PntcbiAgICAgICAgICAgIGlmICghKGtleSBpbiBpbmNvbWluZ0RhdGEpKSB7XG4gICAgICAgICAgICAgICAgZGVsZXRlIHJlc3VsdFtrZXldO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgLy8gSXRlcmF0ZSBvdmVyIHRoZSBrZXlzIG9mIGBpbmNvbWluZ0RhdGFgIGFuZCBwb3B1bGF0ZSBgcmVzdWx0YFxuICAgICAgICBPYmplY3Qua2V5cyhpbmNvbWluZ0RhdGEpLmZvckVhY2goKGtleSk9PntcbiAgICAgICAgICAgIGlmICghcmVzdWx0W2tleV0pIHtcbiAgICAgICAgICAgICAgICAvLyBJbnN0YW50aWF0ZSB0aGUga2V5IGluIGByZXN1bHRgIGlmIGl0IGRvZXNuJ3QgZXhpc3RcbiAgICAgICAgICAgICAgICAvLyBFbnN1cmUgaXRzIHR5cGUgbWF0Y2hlcyB0aGUgdHlwZSBvZiB0aGUgYGluY29taW5nRGF0YWBcbiAgICAgICAgICAgICAgICAvLyBXZSBkb24ndCBoYXZlIGEgc2NoZW1hIHRvIGNoZWNrIGFnYWluc3QgaGVyZVxuICAgICAgICAgICAgICAgIHJlc3VsdFtrZXldID0gaW5jb21pbmdEYXRhW2tleV0gJiYgdHlwZW9mIGluY29taW5nRGF0YVtrZXldID09PSAnb2JqZWN0JyA/IEFycmF5LmlzQXJyYXkoaW5jb21pbmdEYXRhW2tleV0pID8gW10gOiB7fSA6IHVuZGVmaW5lZDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IGlzUmVsYXRpb25zaGlwID0ga2V5ID09PSAndmFsdWUnICYmICdyZWxhdGlvblRvJyBpbiBpbmNvbWluZ0RhdGE7XG4gICAgICAgICAgICBpZiAoaXNSZWxhdGlvbnNoaXApIHtcbiAgICAgICAgICAgICAgICAvLyBvciBpZiB0aGVyZSBhcmUgbm8ga2V5cyBiZXNpZGVzIGlkXG4gICAgICAgICAgICAgICAgY29uc3QgbmVlZHNQb3B1bGF0aW9uID0gIXJlc3VsdC52YWx1ZSB8fCB0eXBlb2YgcmVzdWx0LnZhbHVlICE9PSAnb2JqZWN0JyB8fCB0eXBlb2YgcmVzdWx0LnZhbHVlID09PSAnb2JqZWN0JyAmJiBPYmplY3Qua2V5cyhyZXN1bHQudmFsdWUpLmxlbmd0aCA9PT0gMSAmJiAnaWQnIGluIHJlc3VsdC52YWx1ZTtcbiAgICAgICAgICAgICAgICBjb25zdCBoYXNDaGFuZ2VkID0gcmVzdWx0ICYmIHR5cGVvZiByZXN1bHQgPT09ICdvYmplY3QnICYmIHJlc3VsdC52YWx1ZS5pZCA9PT0gZXh0ZXJuYWxseVVwZGF0ZWRSZWxhdGlvbnNoaXA/LmlkO1xuICAgICAgICAgICAgICAgIGlmIChuZWVkc1BvcHVsYXRpb24gfHwgaGFzQ2hhbmdlZCkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoIXBvcHVsYXRpb25zQnlDb2xsZWN0aW9uW2luY29taW5nRGF0YS5yZWxhdGlvblRvXSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcG9wdWxhdGlvbnNCeUNvbGxlY3Rpb25baW5jb21pbmdEYXRhLnJlbGF0aW9uVG9dID0gW107XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgcG9wdWxhdGlvbnNCeUNvbGxlY3Rpb25baW5jb21pbmdEYXRhLnJlbGF0aW9uVG9dLnB1c2goe1xuICAgICAgICAgICAgICAgICAgICAgICAgaWQ6IGluY29taW5nRGF0YVtrZXldICYmIHR5cGVvZiBpbmNvbWluZ0RhdGFba2V5XSA9PT0gJ29iamVjdCcgPyBpbmNvbWluZ0RhdGFba2V5XS5pZCA6IGluY29taW5nRGF0YVtrZXldLFxuICAgICAgICAgICAgICAgICAgICAgICAgYWNjZXNzb3I6ICd2YWx1ZScsXG4gICAgICAgICAgICAgICAgICAgICAgICByZWY6IHJlc3VsdFxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHJlc3VsdFtrZXldID0gdHJhdmVyc2VSaWNoVGV4dCh7XG4gICAgICAgICAgICAgICAgICAgIGV4dGVybmFsbHlVcGRhdGVkUmVsYXRpb25zaGlwLFxuICAgICAgICAgICAgICAgICAgICBpbmNvbWluZ0RhdGE6IGluY29taW5nRGF0YVtrZXldLFxuICAgICAgICAgICAgICAgICAgICBwb3B1bGF0aW9uc0J5Q29sbGVjdGlvbixcbiAgICAgICAgICAgICAgICAgICAgcmVzdWx0OiByZXN1bHRba2V5XVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgICByZXN1bHQgPSBpbmNvbWluZ0RhdGE7XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG59O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD10cmF2ZXJzZVJpY2hUZXh0LmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@payloadcms+live-preview@3.29.0/node_modules/@payloadcms/live-preview/dist/traverseRichText.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@payloadcms+live-preview@3.29.0/node_modules/@payloadcms/live-preview/dist/unsubscribe.js":
/*!**********************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@payloadcms+live-preview@3.29.0/node_modules/@payloadcms/live-preview/dist/unsubscribe.js ***!
  \**********************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   unsubscribe: () => (/* binding */ unsubscribe)\n/* harmony export */ });\nconst unsubscribe = (callback)=>{\n    if (typeof window !== 'undefined') {\n        window.removeEventListener('message', callback);\n    }\n};\n\n//# sourceMappingURL=unsubscribe.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHBheWxvYWRjbXMrbGl2ZS1wcmV2aWV3QDMuMjkuMC9ub2RlX21vZHVsZXMvQHBheWxvYWRjbXMvbGl2ZS1wcmV2aWV3L2Rpc3QvdW5zdWJzY3JpYmUuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcaGFzaGlcXERlc2t0b3BcXGZ1c2lvbmlxeC1wcm9qZWN0c1xcZnVzaW9uaXF4XFxub2RlX21vZHVsZXNcXC5wbnBtXFxAcGF5bG9hZGNtcytsaXZlLXByZXZpZXdAMy4yOS4wXFxub2RlX21vZHVsZXNcXEBwYXlsb2FkY21zXFxsaXZlLXByZXZpZXdcXGRpc3RcXHVuc3Vic2NyaWJlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCB1bnN1YnNjcmliZSA9IChjYWxsYmFjayk9PntcbiAgICBpZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ21lc3NhZ2UnLCBjYWxsYmFjayk7XG4gICAgfVxufTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dW5zdWJzY3JpYmUuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@payloadcms+live-preview@3.29.0/node_modules/@payloadcms/live-preview/dist/unsubscribe.js\n");

/***/ })

};
;